{"version":3,"sources":["data/index.txt","context/Context.js","components/Letter.js","components/Board.js","components/GameOver.js","components/Key.js","components/Keyboard.js","pages/Game.js","App.js","components/Words.js","context/Provider.js","index.js"],"names":["module","exports","Context","createContext","LetterCss","styled","div","Letter","letterPos","attemptVal","useContext","board","correctWord","currAttempt","setDisabledLetters","letter","correct","toUpperCase","almost","includes","letterState","attempt","useEffect","prev","id","Row","BoardCss","Board","GameOver","gameOver","className","guessedWord","Wrapper","Key","keyVal","bigkey","disabled","onSelectLetter","onDelete","onEnter","onClick","KeyboardDiv","Line1","Line2","Line3","Keyboard","keys1","keys2","keys3","disabledLetters","handleKeyboard","useCallback","event","key","forEach","toLowerCase","document","addEventListener","removeEventListener","onKeyDown","map","keyBord","i","Game","Title","h1","App","generateWordSet","a","fetch","wordBank","then","response","text","result","wordArr","split","todaysWord","Math","floor","random","length","wordSet","Set","Provider","children","useState","wordsDefault","setBoard","setCurrAttempt","setWordSet","setCorrectWord","setGameOver","words","value","newBoard","currWord","has","alert","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.348141d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.44a432e2.txt\";","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { number } from 'prop-types';\nimport Context from '../context/Context';\n\nconst LetterCss = styled.div`\n  flex: 33%;\n  height: 100%;\n  border: 1px solid grey;\n  margin: 5px;\n  display: grid;\n  place-items: center;\n  font-size: 30px;\n  font-weight: bolder;\n  color: white;\n  padding: 5px;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nfunction Letter({ letterPos, attemptVal }) {\n  const {\n    board,\n    correctWord,\n    currAttempt,\n    setDisabledLetters,\n  } = useContext(Context);\n\n  const letter = board[attemptVal][letterPos];\n\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter !== '' && correctWord.includes(letter);\n  const letterState = currAttempt.attempt > attemptVal\n    && (correct ? 'correct' : almost ? 'almost' : 'error');\n\n  useEffect(() => {\n    if (letter !== '' && !correct && !almost) {\n      setDisabledLetters((prev) => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n\n  return (\n    <LetterCss id={ letterState }>{letter}</LetterCss>\n  );\n}\n\nLetter.propTypes = {\n  letterPos: number.isRequired,\n  attemptVal: number.isRequired,\n};\n\nexport default Letter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Letter from './Letter';\n\nconst Row = styled.div`\n  flex: 33%;\n  display: flex;\n  flex-direction: row;\n  margin: 20px 5px;\n  padding: 0;\n`;\n\nconst BoardCss = styled.div`\n  width: 350px;\n  height: 450px;\n  border: 1px solid white;\n  display: flex;\n  flex-direction: column;\n\n`;\n\nfunction Board() {\n  return (\n    <BoardCss>\n      <Row>\n        <Letter letterPos={ 0 } attemptVal={ 0 } />\n        <Letter letterPos={ 1 } attemptVal={ 0 } />\n        <Letter letterPos={ 2 } attemptVal={ 0 } />\n        <Letter letterPos={ 3 } attemptVal={ 0 } />\n        <Letter letterPos={ 4 } attemptVal={ 0 } />\n      </Row>\n      <Row>\n        <Letter letterPos={ 0 } attemptVal={ 1 } />\n        <Letter letterPos={ 1 } attemptVal={ 1 } />\n        <Letter letterPos={ 2 } attemptVal={ 1 } />\n        <Letter letterPos={ 3 } attemptVal={ 1 } />\n        <Letter letterPos={ 4 } attemptVal={ 1 } />\n      </Row>\n      <Row>\n        <Letter letterPos={ 0 } attemptVal={ 2 } />\n        <Letter letterPos={ 1 } attemptVal={ 2 } />\n        <Letter letterPos={ 2 } attemptVal={ 2 } />\n        <Letter letterPos={ 3 } attemptVal={ 2 } />\n        <Letter letterPos={ 4 } attemptVal={ 2 } />\n      </Row>\n      <Row>\n        <Letter letterPos={ 0 } attemptVal={ 3 } />\n        <Letter letterPos={ 1 } attemptVal={ 3 } />\n        <Letter letterPos={ 2 } attemptVal={ 3 } />\n        <Letter letterPos={ 3 } attemptVal={ 3 } />\n        <Letter letterPos={ 4 } attemptVal={ 3 } />\n      </Row>\n      <Row>\n        <Letter letterPos={ 0 } attemptVal={ 4 } />\n        <Letter letterPos={ 1 } attemptVal={ 4 } />\n        <Letter letterPos={ 2 } attemptVal={ 4 } />\n        <Letter letterPos={ 3 } attemptVal={ 4 } />\n        <Letter letterPos={ 4 } attemptVal={ 4 } />\n      </Row>\n    </BoardCss>\n  );\n}\n\nexport default Board;\n","import React, { useContext } from 'react';\nimport Context from '../context/Context';\n\nfunction GameOver() {\n  const { gameOver, currAttempt, correctWord } = useContext(Context);\n  return (\n    <div className=\"gameOver\">\n      <h3>\n        {gameOver.guessedWord\n          ? \"You Correctly Guessed the Wordle\"\n          : \"You Failed to Guess the Word\"}\n      </h3>\n      <h1>Correct Word: {correctWord}</h1>\n      {gameOver.guessedWord && (\n        <h3>You guessed in {currAttempt.attempt} attempts</h3>\n      )}\n    </div>\n  );\n}\n\nexport default GameOver;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Context from '../context/Context';\n\nconst Wrapper = styled.div`\n  width: 50px;\n  height: 70px;\n  margin: 5px;\n  border-radius: 4px;\n  display: grid;\n  place-items: center;\n  font-size: 20px;\n  background-color: grey;\n  color: white;\n  font-family: Arial, Helvetica, sans-serif;\n  cursor: pointer;\n`;\n\nfunction Key({ keyVal, bigkey, disabled = '' }) {\n  const {\n    onSelectLetter,\n    onDelete,\n    onEnter,\n  } = useContext(Context);\n\n  const setSelectedLetter = () => {\n    if (keyVal === 'ENTER') {\n      onEnter();\n    } else if (keyVal === 'DELETE') {\n      onDelete();\n    } else {\n      onSelectLetter(keyVal);\n    }\n  };\n\n  return (\n    <Wrapper\n      id={ bigkey ? 'big' : disabled && 'disabled' }\n      onClick={ setSelectedLetter }\n    >\n      {keyVal}\n    </Wrapper>\n  );\n}\n\nexport default Key;\n","import React, { useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport Context from '../context/Context';\nimport Key from './Key';\n\nconst KeyboardDiv = styled.div`\n  width: 700px;\n  height: 300px;\n  margin-top: 60px;\n`;\n\nconst Line1 = styled.div`\n  flex: 33%;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  justify-content: center;\n  margin: 5px;\n`;\nconst Line2 = styled.div`\n  flex: 33%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 5px;\n`;\nconst Line3 = styled.div`\n  flex: 33%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 5px;\n`;\n\nfunction Keyboard() {\n  const keys1 = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'];\n  const keys2 = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'];\n  const keys3 = ['Z', 'X', 'C', 'V', 'B', 'N', 'M'];\n\n  const { onEnter, onDelete, onSelectLetter, disabledLetters } = useContext(Context);\n\n  const handleKeyboard = useCallback((event) => {\n    if (event.key === 'Enter') {\n      onEnter();\n    } else if (event.key === 'Backspace') {\n      onDelete();\n    } else {\n      keys1.forEach((key) => {\n        if (event.key.toLowerCase() === key.toLowerCase()) {\n          onSelectLetter(key);\n        }\n      });\n      keys2.forEach((key) => {\n        if (event.key.toLowerCase() === key.toLowerCase()) {\n          onSelectLetter(key);\n        }\n      });\n      keys3.forEach((key) => {\n        if (event.key.toLowerCase() === key.toLowerCase()) {\n          onSelectLetter(key);\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyboard);\n    };\n  }, [handleKeyboard]);\n\n  return (\n    <KeyboardDiv onKeyDown={ handleKeyboard }>\n      <Line1>\n        {keys1.map((keyBord, i) => (\n          <div key={ i }>\n            <Key keyVal={ keyBord } disabled={ disabledLetters.includes(keyBord) } />\n          </div>\n        ))}\n      </Line1>\n      <Line2>\n        {keys2.map((keyBord, i) => (\n          <div key={ i }>\n            <Key keyVal={ keyBord } disabled={ disabledLetters.includes(keyBord) } />\n          </div>\n        ))}\n      </Line2>\n      <Line3>\n        <Key keyVal=\"ENTER\" bigkey />\n        {keys3.map((keyBord, i) => (\n          <div key={ i }>\n            <Key keyVal={ keyBord } disabled={ disabledLetters.includes(keyBord) } />\n          </div>\n        ))}\n        <Key keyVal=\"DELETE\" bigkey />\n      </Line3>\n    </KeyboardDiv>\n  );\n}\n\nexport default Keyboard;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Board from '../components/Board';\nimport GameOver from '../components/GameOver';\nimport Keyboard from '../components/Keyboard';\nimport Context from '../context/Context';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  padding-top: 10px;\n  flex-direction: column;\n`;\n\nfunction Game() {\n  const { gameOver } = useContext(Context);\n  return (\n    <Wrapper>\n      <Board />\n      { gameOver.gameOver ? <GameOver /> : <Keyboard /> }\n    </Wrapper>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport Game from './pages/Game';\n\nconst Title = styled.h1`\n  font-size: 3em;\n  text-align: center;\n  color: white;\n  margin-bottom: 20px;\n  border-bottom: 1px solid white;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title>Wordle</Title>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import wordBank from '../data/index.txt';\n\nexport default [\n  ['', '', '', '', ''],\n  ['', '', '', '', ''],\n  ['', '', '', '', ''],\n  ['', '', '', '', ''],\n  ['', '', '', '', ''],\n  ['', '', '', '', ''],\n];\n\nexport const generateWordSet = async () => {\n  let wordSet;\n  let todaysWord;\n  await fetch(wordBank)\n    .then((response) => response.text())\n    .then((result) => {\n      const wordArr = result.split('\\n');\n      todaysWord = wordArr[Math.floor(Math.random() * wordArr.length)];\n      wordSet = new Set(wordArr);\n    });\n  return { wordSet, todaysWord };\n};\n","import React, { useState, useEffect } from 'react';\nimport { node } from 'prop-types';\nimport wordsDefault, { generateWordSet } from '../components/Words';\nimport Context from './Context';\n\nfunction Provider({ children }) {\n  const [board, setBoard] = useState(wordsDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letterPos: 0 });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [correctWord, setCorrectWord] = useState('');\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false,\n  });\n\n  useEffect(() => {\n    generateWordSet().then((words) => {\n      setWordSet(words.wordSet);\n      setCorrectWord(words.todaysWord);\n    });\n  }, []);\n\n  const onSelectLetter = (keyVal) => {\n    const LIMIT_LINE = 4;\n    if (currAttempt.letterPos > LIMIT_LINE) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letterPos: currAttempt.letterPos + 1,\n    });\n  };\n  const onDelete = () => {\n    if (currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = '';\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letterPos: currAttempt.letterPos - 1,\n    });\n  };\n  const onEnter = () => {\n    const FIVE = 5;\n    if (currAttempt.letterPos !== FIVE) return;\n\n    let currWord = '';\n    for (let i = 0; i < 5; i += 1) {\n      currWord += board[currAttempt.attempt][i];\n    }\n\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({ attempt: currAttempt.attempt + 1, letterPos: 0 });\n    } else {\n      alert('Word not found');\n    }\n\n    if (currWord === correctWord) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: true,\n      });\n      return;\n    }\n\n    if (currAttempt.attempt === 4) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: false,\n      });\n    }\n  };\n\n  const value = {\n    board,\n    setBoard,\n    currAttempt,\n    setCurrAttempt,\n    onSelectLetter,\n    onDelete,\n    onEnter,\n    correctWord,\n    disabledLetters,\n    setDisabledLetters,\n    gameOver,\n    setGameOver,\n  };\n\n  return (\n    <Context.Provider value={ value }>\n      {children}\n    </Context.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Provider from './context/Provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}